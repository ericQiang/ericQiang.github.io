<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>小强学Python+OpenCV之－1.0开篇</title>
    <link href="/2024/01/13/%E5%B0%8F%E5%BC%BA%E5%AD%A6Python-OpenCV%E4%B9%8B%EF%BC%8D1-0%E5%BC%80%E7%AF%87/"/>
    <url>/2024/01/13/%E5%B0%8F%E5%BC%BA%E5%AD%A6Python-OpenCV%E4%B9%8B%EF%BC%8D1-0%E5%BC%80%E7%AF%87/</url>
    
    <content type="html"><![CDATA[<h1 id="小强学Python-OpenCV之－1-0开篇"><a href="#小强学Python-OpenCV之－1-0开篇" class="headerlink" title="小强学Python+OpenCV之－1.0开篇"></a>小强学Python+OpenCV之－1.0开篇</h1><h2 id="写在前面："><a href="#写在前面：" class="headerlink" title="写在前面："></a>写在前面：</h2><p>有没有想过使用Python + OpenCV来实现人脸识别？<br>想想就有点小兴奋吧。<br>小强也是不久前才了解到可以使用Python + OpenCV进行图像处理。觉得有趣就想学习一下。<br>在这里，把我学到的小知识记录一下，也为了自己以后方便查看。<br>也希望有相同兴趣的同学搭个伴，一起学习。更希望得到大牛们的指点和鼓励。</p><p>完成此课后，我设置的终极目标有下面几个：</p><p>1. </p>   <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs undefined">实现停车场的车牌识别系统，并到天桥上去做实验<br></code></pre></td></tr></table></figure><p>2. </p>   <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs undefined">手势识别？<br></code></pre></td></tr></table></figure><p>3. </p>   <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs undefined">道路标线识别？自动驾驶？<br></code></pre></td></tr></table></figure><p>4. </p>   <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs undefined">标志图形识别？跟踪？四轴飞行器？<br></code></pre></td></tr></table></figure><p>5. </p>   <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs undefined">……发挥想像，一切和图像识别有关的东东<br></code></pre></td></tr></table></figure><p>6. </p>   <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs undefined">Deep learning?<br></code></pre></td></tr></table></figure><p>——————————————————华丽的分割线———————————————————</p><h2 id="下面进入正题。"><a href="#下面进入正题。" class="headerlink" title="下面进入正题。"></a>下面进入正题。</h2><p>编辑一个python脚本，取名为face_detect.py<br>键入以下内容并保存。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># 导入opencv库</span><br><span class="hljs-keyword">import</span> cv2<br> <br><span class="hljs-comment"># 加载图像</span><br>image = cv2.imread(<span class="hljs-string">&quot;messi.jpg&quot;</span>)<br> <br><span class="hljs-comment"># 显示我们的原始图像到屏幕上</span><br>cv2.imshow(<span class="hljs-string">&quot;Faces&quot;</span>, image)<br> <br><span class="hljs-comment"># 等待键盘输出</span><br>cv2.waitKey(<span class="hljs-number">0</span>)<br> <br><span class="hljs-comment"># 将图像转成灰度图像</span><br>gray = cv2.cvtColor(image,cv2.COLOR_BGR2GRAY)<br> <br><span class="hljs-comment"># 加载人脸分类检测器（这个分类检测器可以在opencv的安装路径xxx/OpenCV/haarcascade下找到）</span><br>detector =cv2.CascadeClassifier(<span class="hljs-string">&quot;haarcascade_frontalface_default.xml&quot;</span>)<br> <br><span class="hljs-comment"># 识别人脸，得到人脸所在的矩形区域（可能会得到多个人脸，所以这里是一个list）</span><br>rects = detector.detectMultiScale(gray,scaleFactor=<span class="hljs-number">1.05</span>, minNeighbors=<span class="hljs-number">7</span>,<br>         minSize=(<span class="hljs-number">30</span>,<span class="hljs-number">30</span>), flags=cv2.cv.CV_HAAR_SCALE_IMAGE)<br> <br><span class="hljs-comment"># 遍历list中每个识别到的人脸区域，并在原始图像上沿该区域的边界画一个颜色为绿色、线宽为2个像素的边框</span><br><span class="hljs-keyword">for</span> (x, y, w, h) <span class="hljs-keyword">in</span> rects:<br>         cv2.rectangle(image,(x, y), (x + w, y + h), (<span class="hljs-number">0</span>, <span class="hljs-number">255</span>, <span class="hljs-number">0</span>), <span class="hljs-number">2</span>)<br> <br><span class="hljs-comment"># 将图像显示在屏幕上，</span><br>cv2.imshow(<span class="hljs-string">&quot;Faces&quot;</span>, image)<br> <br><span class="hljs-comment"># 等待键盘输出</span><br>cv2.waitKey(<span class="hljs-number">0</span>)<br></code></pre></td></tr></table></figure><p>保存之后，在终端中执行python detect_faces.py<br>首先显示的是我们的原始图像。</p><div align=center>![process](messi2.jpg)![ori](messi1.jpg)<p>此时，按上键盘上的任意按键。</p><p>奇迹发生了。人脸识别出来了。</p><div align=center>![process](messi2.jpg)<p>是不是觉得很有趣？</p><p>话说回来。我们的路还长。这里只是给大家一个印象－好玩儿。毕竟兴趣才是最好的老师。</p><p>下面我会按部就班，完成以下内容（会慢慢补充）：</p><p>1.1. 图像的加载，显示和保存<br>1.2. 图像知识基础<br>1.3. 绘图<br>1.4. 基本图像处理<br>1.4.1 平移、旋转、缩放、翻转－之理论<br>1.4.2 裁剪<br>1.4.3 算术运算<br>1.4.4 掩膜(mask)及位运算<br>1.4.5 通道分离及合并<br>1.5. 内核（kernel）<br>1.6. 形态学图像处理（morphological operations）<br>1.7. 平滑模糊（smoothing and blurring）<br>1.8. 照明和颜色空间<br>1.9. 阈值<br>1.10. 梯度和边缘检测<br>a) 渐变<br>b) 边缘检测<br>1.11. 轮廓<br>a) 查找和绘制轮廓<br>b) 简单轮廓特性<br>c) 高级轮廓特性<br>d) 轮廓逼近<br>e) 轮廓排序<br>1.2. 柱状图<br>1.3. 连通区域标记</p><p>2.1. 什么是物体探测<br>a) 物体探测介绍<br>b) 模板匹配<br>2.2 物体探测<br>a) 安装dlib<br>b) 物体探测<br>2.3 ……</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/2024/01/13/hello-world/"/>
    <url>/2024/01/13/hello-world/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo new <span class="hljs-string">&quot;My New Post&quot;</span><br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo server<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo generate<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo deploy<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
